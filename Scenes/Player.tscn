[gd_scene load_steps=10 format=2]

[ext_resource path="res://Sprites/esrdsgk;vbsjdxgvcx.png" type="Texture" id=1]
[ext_resource path="res://Player.gd" type="Script" id=2]
[ext_resource path="res://Scenes/gun.tscn" type="PackedScene" id=3]
[ext_resource path="res://Camera2D.gd" type="Script" id=4]
[ext_resource path="res://Scenes/Ammo.tscn" type="PackedScene" id=5]
[ext_resource path="res://ProgressBar.gd" type="Script" id=7]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

var UP = Vector2(0,-1)
var GRAVITY = 50
var SPEED = 500
var MAXFALLSPEED = 600
var JUMP = 900
var motion = Vector2()
var SCROLLSPEED = 300
var DDJump = true
signal PlayerMX
export (PackedScene) var Bullet

func _physics_process(delta):
	motion.y += GRAVITY
	if motion.y > MAXFALLSPEED:
		motion.y = MAXFALLSPEED 

	if Input.is_action_pressed(\"ui_right\"):
		motion.x = SPEED
	elif Input.is_action_pressed(\"ui_left\"):
		motion.x = -SPEED
	else:
		motion.x = 0
		$AnimationPlayer.play(\"idle\")

	if is_on_floor():
		if Input.is_action_just_pressed(\"ui_up\"):
			motion.y = -JUMP
		DDJump = true

	if not is_on_floor():
		if DDJump == true:
			if Input.is_action_just_pressed(\"ui_up\"):
				motion.y = -JUMP
				DDJump = false

	if position.y >= 1300:
		GlobalVariables.PlayerAlive = false

	if GlobalVariables.KnockBack == true:
		motion.x = -SPEED * 1.5
		motion.y = -GRAVITY * 16

	motion = move_and_slide(motion, Vector2.UP)
"

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0 ]
}

[sub_resource type="Animation" id=2]
length = 2.5
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5, 2, 2.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5 ]
}

[node name="Player" type="Node2D"]
position = Vector2( 1, 0 )
script = ExtResource( 2 )

[node name="Play" type="KinematicBody2D" parent="."]
script = SubResource( 1 )
Bullet = ExtResource( 5 )

[node name="Sprite" type="Sprite" parent="Play"]
scale = Vector2( 2, 2 )
texture = ExtResource( 1 )
hframes = 6

[node name="CollisionPolygon2D2" type="CollisionPolygon2D" parent="Play"]
use_parent_material = true
position = Vector2( 3, -4 )
polygon = PoolVector2Array( 5.14329, 3.72698, 8, 17, 12, 23, 17.7684, 31.88, 0, 31, 2, 23, -3, 19, -8, 23, -5, 32, -20.0411, 32.0124, -17, 24, -13, 18, -13, 1, -12, -2, -11, -7, -15, -12, -15.236, -23.4454, -13.2315, -24.8931, 7.03645, -24.225, 8.70689, -22.2204, 7, -15, 6, -9, 6, -5, 4.92056, -0.282059 )
one_way_collision_margin = 0.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="Play"]
anims/RESET = SubResource( 3 )
anims/idle = SubResource( 2 )

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="Play"]

[node name="gun" parent="Play" instance=ExtResource( 3 )]
position = Vector2( 20, -9 )

[node name="dash_timer" type="Timer" parent="Play"]
one_shot = true

[node name="Camera2D" type="Camera2D" parent="Play"]
position = Vector2( -512, -472 )
anchor_mode = 0
current = true
process_mode = 0
drag_margin_h_enabled = true
drag_margin_left = 0.62
drag_margin_top = 1.0
drag_margin_right = 0.62
drag_margin_bottom = 1.0
editor_draw_limits = true
editor_draw_drag_margin = true
script = ExtResource( 4 )

[node name="ProgressBar" type="ProgressBar" parent="Play/Camera2D"]
margin_left = 16.0
margin_top = 8.0
margin_right = 448.0
margin_bottom = 48.0
custom_colors/font_color = Color( 1, 0, 0, 1 )
custom_colors/font_color_shadow = Color( 0.0627451, 0, 0.796078, 1 )
max_value = 1000.0
script = ExtResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="screen_entered" from="Play/VisibilityNotifier2D" to="." method="_on_VisibilityNotifier2D_screen_entered"]
[connection signal="screen_exited" from="Play/VisibilityNotifier2D" to="." method="_on_VisibilityNotifier2D_screen_exited"]
